<?xml version="1.0" encoding="utf-8"?>
<view:BaseViewObject xmlns:fx="http://ns.adobe.com/mxml/2009"
					 xmlns:s="library://ns.adobe.com/flex/spark"
					 xmlns:view="ru.nacid.base.view.*"
					 width="400"
					 height="300">

	<fx:Script>
		<![CDATA[
			import com.junkbyte.console.Cc;

			import ru.nacid.utils.StringUtils;

			protected const VIEW_CHANNEL:String='DIS';

			private var _id:String;
			private var _numericId:Number;

			private var _inited:Boolean;
			private var _onStage:Boolean;

			protected var showData:Object;

			final public function applyId($id:String):void
			{
				_id=$id;
				_numericId=StringUtils.toCRC(_id);

				if (stage)
				{
					init();
					show();
				}
				else
					addEventListener(Event.ADDED_TO_STAGE, stageOnHandler);
			}

			private function stageOnHandler(e:Event):void
			{
				addEventListener(Event.REMOVED_FROM_STAGE, stageOffHandler);
				removeEventListener(Event.ADDED_TO_STAGE, stageOnHandler);

				if (!_inited)
					init();
				_onStage=true;

				arrange();
				show();
			}

			private function stageOffHandler(e:Event):void
			{
				removeEventListener(Event.REMOVED_FROM_STAGE, stageOffHandler);
				addEventListener(Event.ADDED_TO_STAGE, stageOnHandler);

				_onStage=false;
				hide();
			}

			protected function init():void
			{
				//@override
			}

			protected function show():void
			{
				//@override
			}

			protected function hide():void
			{
				//@override
			}

			public function arrange():void
			{
				//@override
			}

			public function isInited():Boolean
			{
				return _inited;
			}

			public function get onStage():Boolean
			{
				return _onStage;
			}

			/* INTERFACE ru.nacid.base.data.interfaces.IData */



			public function get symbol():String
			{
				return _id;
			}

			public function valueOf():Number
			{
				return _numericId;
			}

			/* INTERFACE ru.nacid.base.services.logs.interfaces.IChannelParent */

			public function log($string:String):void
			{
				Cc.logch(VIEW_CHANNEL, $string);
			}

			public function warning($string:String):void
			{
				Cc.warnch(VIEW_CHANNEL, $string);
			}

			public function info($string:String):void
			{
				Cc.infoch(VIEW_CHANNEL, $string);
			}

			public function error($string:String):void
			{
				Cc.errorch(VIEW_CHANNEL, $string);
			}

			public function critical($string:String):void
			{
				Cc.fatalch(VIEW_CHANNEL, $string);
			}
		]]>
	</fx:Script>
</view:BaseViewObject>
